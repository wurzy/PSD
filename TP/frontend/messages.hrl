%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.16.0

-ifndef(messages).
-define(messages, true).

-define(messages_gpb_version, "4.16.0").

-ifndef('MESSAGE_PB_H').
-define('MESSAGE_PB_H', true).
-record('Message',
        {type                   :: 'REGISTER' | 'LOGIN' | 'LOGOUT' | 'REPLY' | 'LOCATION' | 'SICK' | 'NR_PEOPLE' | 'LOCATION_PING' | 'SICK_PING' | 'NR_PEOPLE_REPLY' | 'NOTIFY_USERS' | 'NOTIFICATION' | 'PORT' | integer() | undefined, % = 1, required, enum Type
         register               :: messages:'Register'() | undefined, % = 2, optional
         login                  :: messages:'Login'() | undefined, % = 3, optional
         reply                  :: messages:'Reply'() | undefined, % = 4, optional
         location               :: messages:'Location'() | undefined, % = 5, optional
         sickPing               :: messages:'SickPing'() | undefined, % = 6, optional
         port                   :: messages:'PrivateNotificationsPort'() | undefined, % = 7, optional
         notifyUsers            :: messages:'NotifyUsers'() | undefined, % = 8, optional
         nrPeopleReply          :: messages:'NrPeopleReply'() | undefined, % = 9, optional
         notification           :: messages:'Notification'() | undefined % = 10, optional
        }).
-endif.

-ifndef('REGISTER_PB_H').
-define('REGISTER_PB_H', true).
-record('Register',
        {username               :: iodata() | undefined, % = 1, required
         password               :: iodata() | undefined, % = 2, required
         district               :: iodata() | undefined % = 3, required
        }).
-endif.

-ifndef('LOGIN_PB_H').
-define('LOGIN_PB_H', true).
-record('Login',
        {username               :: iodata() | undefined, % = 1, required
         password               :: iodata() | undefined % = 2, required
        }).
-endif.

-ifndef('REPLY_PB_H').
-define('REPLY_PB_H', true).
-record('Reply',
        {result                 :: boolean() | 0 | 1 | undefined, % = 1, required
         message                :: iodata() | undefined % = 2, required
        }).
-endif.

-ifndef('LOCATION_PB_H').
-define('LOCATION_PB_H', true).
-record('Location',
        {username               :: iodata() | undefined, % = 1, optional
         coordx                 :: integer() | undefined, % = 2, required, 32 bits
         coordy                 :: integer() | undefined % = 3, required, 32 bits
        }).
-endif.

-ifndef('SICKPING_PB_H').
-define('SICKPING_PB_H', true).
-record('SickPing',
        {username               :: iodata() | undefined % = 1, required
        }).
-endif.

-ifndef('NRPEOPLEREPLY_PB_H').
-define('NRPEOPLEREPLY_PB_H', true).
-record('NrPeopleReply',
        {username               :: iodata() | undefined, % = 1, required
         total                  :: integer() | undefined % = 2, required, 32 bits
        }).
-endif.

-ifndef('NOTIFYUSERS_PB_H').
-define('NOTIFYUSERS_PB_H', true).
-record('NotifyUsers',
        {users                  :: iodata() | undefined % = 1, required
        }).
-endif.

-ifndef('NOTIFICATION_PB_H').
-define('NOTIFICATION_PB_H', true).
-record('Notification',
        {notification           :: iodata() | undefined % = 1, required
        }).
-endif.

-ifndef('PRIVATENOTIFICATIONSPORT_PB_H').
-define('PRIVATENOTIFICATIONSPORT_PB_H', true).
-record('PrivateNotificationsPort',
        {port                   :: integer() | undefined % = 1, required, 32 bits
        }).
-endif.

-endif.
